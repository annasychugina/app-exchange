{"version":3,"sources":["actions/updateRates.ts","actions/exchangeCurrency.ts","services/rates.ts","store/reducers/rates-reducer.ts","actions/notification.ts","types/types.ts","store/reducers/notifications-reducer.ts","store/store.ts","store/reducers/exchange-reducer.ts","constants/currency.ts","ui/number-format-input/number-format-input.tsx","ui/slider/slider.tsx","utils/resourcesTemplate.ts","utils/formatters.ts","utils/parseMoney.ts","ui/exchange-block/exchange-block.tsx","ui/button/button.tsx","ui/exchange-widget/exchange-widget-view.tsx","hooks/useCurrencyFormState.tsx","utils/normalizers.ts","ui/exchange-widget/exchange-widget-container.tsx","utils/validators.ts","utils/getCurrencyNextIndex.ts","ui/notistack/notistack.tsx","index.tsx","ui/app/app.tsx","ui/button/button.module.css","ui/exchange-widget/exchange-widget-view.module.css","ui/app/app.module.css","ui/exchange-block/exchange-block.module.css","ui/number-format-input/number-format-input.module.css","ui/slider/slider.module.css"],"names":["ActionType","ExchangeActionType","updateRatesForCurrency","currency","dispatch","getState","rates","loading","payload","type","RATES_REQUEST","ratesRequest","axios","get","params","base","then","response","status","Error","data","getRates","RATES_RESPONSE_SUCCESS","ratesResponseSuccess","catch","RATES_RESPONSE_ERROR","ratesResponseError","ratesReducer","state","action","loaded","NotificationActionType","CurrencyBlockType","addNotification","ADD_NOTIFICATION","notificationsReducer","RESET_NOTIFICATIONS","composeEnhancers","composeWithDevTools","middlewares","thunk","store","reduxCreateStore","combineReducers","userBalance","initialState","config","EXCHANGE_MONEY","currencyFrom","currencyTo","form","notifications","applyMiddleware","createStore","CURRENCIES","CURRENCY_SYMBOL_MAP","RUB","USD","EUR","GBP","NumberFormatInput","onChange","prefix","inputValue","name","handleChange","useCallback","value","normalizedValue","slice","className","s","input","allowNegative","decimalScale","maxLength","thousandSeparator","autoComplete","onValueChange","defaultSettings","dots","arrows","infinite","speed","Slider","currentSlide","children","onSlideChange","sliderRef","useRef","useEffect","current","slickGoTo","ref","initialSlide","afterChange","map","slide","index","key","resourcesTemplate","str","vars","replace","match","formattedValue","rate","Math","round","parseMoney","toString","innerValue","length","ExchangeBlock","currencyItems","onCurrencyChange","onCurrencyValueChange","balance","currencyAmountStr","isRateLoading","console","log","cn","root","indexOf","block","row","text","resources","balanceText","row_rate","text_rate","error","getRateError","Button","hasLoader","disabled","title","onClick","button","aria-label","width","height","version","x","y","loader","viewBox","circle","cx","cy","r","ExchangeWidgetView","handleCurrencyFromChange","handleCurrencyToChange","handleCurrencyValueChange","handleExchange","valueFrom","valueTo","balanceFrom","balanceTo","isExchangeButtonDisabled","ExchangeWidget","currencyRateText","content","String","submitBtn","buttonTitle","buttonText","useCurrencyFormState","submitCallbacks","validateOnSubmitCallback","initialFormValues","useState","setForm","errorMessage","setError","success","setSuccess","submitting","setSubmitting","updateFieldName","setUpdateFieldName","resultRate","currencyValue","normalizedCurrencyValue","normalizeCurrencyValue","validateOnSubmit","isValid","floatValue","e","useMemo","ExchangeWidgetContainer","useDispatch","timerRef","setCurrencyFrom","setCurrencyTo","useSelector","shallowEqual","currencyToRates","currencyFromRate","variant","checkBalance","timer","updateRatesWithInterval","timerId","clearTimeout","setTimeout","setCurrencyNextIndex","currentCurrency","prevCurrency","currentIndex","prevIndex","getCurrencyNextIndex","Boolean","Notistack","useSnackbar","enqueueSnackbar","closeSnackbar","ReactDOM","render","maxSnack","container","contentWrapper","document","getElementById","module","exports"],"mappings":"iMAIYA,E,2GAAAA,K,8BAAAA,E,gDAAAA,E,6CAAAA,M,KA4BZ,IC9BYC,ED6CCC,EAAyB,SAACC,GAAD,OAAwB,SAACC,EAAoBC,GACjF,IACMC,EADQD,IACMC,MAAMH,GAC1B,IAAIG,IAASA,EAAMC,QAInB,OADAH,EArBmB,SAACD,GAAD,MAAyB,CAC5CK,QAAS,CAACL,YACVM,KAAMT,EAAWU,eAmBRC,CAAaR,IErCA,SAACA,GACvB,OAAOS,IAAMC,IAJY,yCAIK,CAACC,OAAQ,CAACC,KAAMZ,KAAYa,MAAK,SAAAC,GAC7D,GAAwB,MAApBA,EAASC,OACX,MAAM,IAAIC,MAAM,mCAElB,OAAOF,EAASG,QFiCXC,CAASlB,GACba,MAAK,YAAc,IAAZV,EAAW,EAAXA,MACNF,EAnBuB,SAACD,EAAoBG,GAArB,MAAsC,CACjEE,QAAS,CAACL,WAAUG,SACpBG,KAAMT,EAAWsB,wBAiBJC,CAAqBpB,EAAUG,OAEzCkB,OAAM,kBAAMpB,EAhBU,SAACD,GAAD,MAAyB,CAClDK,QAAS,CAACL,YACVM,KAAMT,EAAWyB,sBAcOC,CAAmBvB,SGvDhCwB,EAAe,WAA6D,IAA5DC,EAA2D,uDAAvC,GAAIC,EAAmC,uCACtF,OAAQA,EAAOpB,MACb,KAAKT,EAAWU,cAAgB,IACvBP,EAAY0B,EAAOrB,QAAnBL,SAEP,OAAO,eACFyB,EADL,eAEGzB,EAFH,eAGOyB,EAAMzB,GAHb,CAIII,SAAS,MAKf,KAAKP,EAAWsB,uBAAyB,IAAD,EACZO,EAAOrB,QAA1BL,EAD+B,EAC/BA,SAAUG,EADqB,EACrBA,MACjB,OAAO,eACFsB,EADL,eAEGzB,EAFH,eAGOyB,EAAMzB,GAHb,CAIIG,QACAwB,QAAQ,EACRvB,SAAS,MAKf,KAAKP,EAAWyB,qBAAuB,IAC9BtB,EAAY0B,EAAOrB,QAAnBL,SACP,OAAO,eACFyB,EADL,eAEGzB,EAFH,eAGOyB,EAAMzB,GAHb,CAIII,SAAS,MAKf,QACE,OAAOqB,I,kBFxCD3B,K,iCAAAA,M,KAeL,IGfK8B,E,kBAAAA,K,oCAAAA,E,2CAAAA,M,KAUL,ICLKC,EDKCC,EAAkB,SAACzB,GAC9B,MAAO,CACLC,KAAMsB,EAAuBG,iBAC7B1B,YEZS2B,EAAuB,WAAmF,IAAlFP,EAAiF,uDAAtD,GAAIC,EAAkD,uCACpH,OAAQA,EAAOpB,MACb,KAAKsB,EAAuBG,iBAC1B,MAAM,GAAN,mBAAWN,GAAX,YAAqBC,EAAOrB,UAG9B,KAAKuB,EAAuBK,oBAC1B,MAAO,GAGT,QACE,OAAOR,ICLPS,EAAmBC,8BAAoB,IACvCC,EAA4B,CAACC,KAkBtBC,EAXO,WAClB,OAAOC,sBACLC,0BAA6B,CAC3BC,aCjBgCC,EDiBGC,EChBhC,WAGkB,IAFvBlB,EAEsB,uDAFQiB,EAC9BhB,EACsB,uCACtB,OAAQA,EAAOpB,MACb,KAAKR,EAAmB8C,eAAiB,IAAD,IAGlClB,EADFrB,QAAUwC,EAF0B,EAE1BA,aAAcC,EAFY,EAEZA,WAAYC,EAFA,EAEAA,KAEtC,OAAKA,EAAKF,cAAiBE,EAAKD,WAGzB,eACFrB,GADL,mBAEGoB,EAAepB,EAAMoB,GAAgBE,EAAKF,cAF7C,cAGGC,EAAarB,EAAMqB,GAAcC,EAAKD,YAHzC,IAFSrB,EASX,QACE,OAAOA,KDHTtB,MAAOqB,EACPwB,cAAehB,IAEjBE,EAAiBe,kBAAe,WAAf,EAAmBb,KCrBH,IAACM,EDyBjBQ,G,gBE1BRC,EAA8B,CAAC,MAAO,MAAO,MAAO,OAIpDC,EAA2D,CACtEC,IAAK,SACLC,IAAK,IACLC,IAAK,SACLC,IAAK,S,SJHK3B,K,4BAAAA,E,yBAAAA,M,kDKKC4B,EAAqC,SAAC,GAKjB,IAJhCC,EAI+B,EAJ/BA,SACAC,EAG+B,EAH/BA,OAG+B,IAF/BC,kBAE+B,MAFlB,GAEkB,EAD/BC,EAC+B,EAD/BA,KAEMC,EAAeC,uBACnB,YAAqC,IAAnCC,EAAkC,EAAlCA,MACMC,EAA6B,MAAXN,EAAiBK,EAAME,MAAM,GAAKF,GAGrDC,KAFcL,GAAcA,EAAa,IAG5CF,GAAUO,EAAiBJ,KAG/B,CAACH,EAAUG,EAAMF,EAAQC,IAG3B,OACE,kBAAC,IAAD,CACEO,UAAWC,IAAEC,MACbC,eAAe,EACfC,aAAc,EACdC,UAAW,GACXX,KAAMA,EACNF,OAAQA,EACRK,MAAOJ,EACPa,kBAAmB,IACnBC,aAAc,MACdC,cAAeb,K,yDC1Bfc,EAA4B,CAChCC,MAAM,EACNC,QAAQ,EACRC,UAAU,EACVC,MAAO,KAGIC,EAA0B,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,cACzDC,EAAYC,iBAAoB,MAKtC,OAJAC,qBAAU,WACRF,EAAUG,SAAWH,EAAUG,QAAQC,UAAUP,KAChD,CAACA,IAGF,kBAAC,IAAD,iBAAiBN,EAAjB,CAAkCc,IAAKL,EAAWM,aAAcT,EAAcU,YAAaR,IACxFD,EAASU,KACR,SAACC,EAAkBC,GACjB,OACE,yBAAK5B,UAAWC,IAAE0B,MAAOE,IAAKD,GAC3BD,QClCFG,EAAoB,SAACC,EAAaC,GAC7C,OAAOD,EAAIE,QAAQ,UAAU,SAAAC,GAC3B,IAAML,EAAMK,EAAMD,QAAQ,MAAO,IACjC,OAAOD,EAAKH,OCHHM,EAAiB,SAACC,GAC7B,OAAOC,KAAKC,MAAa,IAAPF,GAAc,KCErBG,EAAa,SAAC1G,EAAoBgE,GAC7C,IAAMkC,EAAMlC,EAAM2C,WACZC,EAAaV,EAAIW,QAAU,EAAIX,EAAMA,EAAIE,QAAQ,wBLOtB,QKNjC,MAAM,GAAN,OAAUpG,EAAQ,UAAMoD,EAAoBpD,IAAc,IAA1D,OAA+D4G,I,wBCmBpDE,EAAiC,SAAC,GAWxC,IAVLC,EAUI,EAVJA,cACAR,EASI,EATJA,KACAvG,EAQI,EARJA,SACAgH,EAOI,EAPJA,iBACAC,EAMI,EANJA,sBACA3G,EAKI,EALJA,KACAsD,EAII,EAJJA,WACAsD,EAGI,EAHJA,QACAC,EAEI,EAFJA,kBAEI,IADJC,qBACI,SAKJ,OADAC,QAAQC,IAAI,OAAQf,GAElB,yBAAKpC,UAAWoD,IAAGnD,IAAEoD,KAAMpD,IAAE,QAAD,OAAS9D,MACnC,kBAAC,EAAD,CAAQ8E,cANQ,SAACW,GACnBiB,EAAiBD,EAAchB,KAKOb,aAAc6B,EAAcU,QAAQzH,IACrE+G,EAAclB,KAAI,SAAC7F,EAAU+F,GAAX,OACjB,yBAAKC,IAAKhG,EAAUmE,UAAWC,IAAEsD,OAC/B,yBAAKvD,UAAWC,IAAEuD,KAChB,2BAAI3H,GACJ,kBAAC,EAAD,CACE2D,OAAQrD,IAASuB,EAAkBgB,aAAe,IAAM,IACxDgB,KAAMvD,EACNsD,WAAYA,EACZF,SAAUuD,KAId,yBAAK9C,UAAWC,IAAEuD,KAChB,uBAAGxD,UAAWC,IAAEwD,MACb,IACA3B,EAAkB4B,EAAUf,cAAcgB,YAAa,CACtDZ,QAASR,EAAW1G,EAAUsG,EAAeY,QAIlDX,GAAQjG,IAASuB,EAAkBiB,YAClC,yBAAKqB,UAAWoD,IAAGnD,IAAEuD,IAAKvD,IAAE2D,WAC1B,uBAAG5D,UAAWoD,IAAGnD,IAAEwD,KAAMxD,IAAE4D,YAAab,KAI1CZ,GAAQjG,IAASuB,EAAkBiB,aAAesE,GAClD,yBAAKjD,UAAWoD,IAAGnD,IAAEuD,IAAKvD,IAAE2D,WAC1B,0BAAM5D,UAAWC,IAAE6D,OAAQJ,EAAUf,cAAcoB,sB,iBCzDtDC,EAA0B,SAAC,GAAD,EACrC7H,KADqC,QAErC8H,iBAFqC,aAGrCC,gBAHqC,SAIrClE,EAJqC,EAIrCA,UACAmE,EALqC,EAKrCA,MACAC,EANqC,EAMrCA,QACApD,EAPqC,EAOrCA,SAPqC,OASrC,4BAAQhB,UAAWoD,IAAGnD,IAAEoE,OAAQrE,GAAYkE,SAAUA,EAAUE,QAASA,EAASD,MAAOA,EAAOG,aAAYH,GACzGF,EACC,yBAAKM,MAAO,GAAIC,OAAQ,GAAIC,QAAQ,MAAMC,EAAE,IAAIC,EAAE,IAAI3E,UAAWC,IAAE2E,OAAQC,QAAQ,eACjF,4BAAQ7E,UAAWC,IAAE6E,OAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,QAGjDjE,I,6BCHOkE,GAAsC,SAAC,GAc7C,IAbLvG,EAaI,EAbJA,WACAD,EAYI,EAZJA,aACAyG,EAWI,EAXJA,yBACAC,EAUI,EAVJA,uBACAC,EASI,EATJA,0BACAC,EAQI,EARJA,eACAlD,EAOI,EAPJA,KACAmD,EAMI,EANJA,UACAC,EAKI,EALJA,QACAvC,EAII,EAJJA,cACAwC,EAGI,EAHJA,YACAC,EAEI,EAFJA,UACAC,EACI,EADJA,yBAEM3C,EAAoBlB,EAAkB4B,GAAUkC,eAAeC,iBAAkB,CACrFlH,WAAW,GAAD,OAAKM,EAAoBN,IACnCD,aAAa,GAAD,OAAKO,EAAoBP,IAAzB,OAAyCyD,EAAeC,MAGtE,OACE,6BAASpC,UAAWC,KAAEoD,MACpB,yBAAKrD,UAAWC,KAAE6F,SAChB,kBAAC,EAAD,CACE/C,QAAS0C,EACT5C,iBAAkB,SAAAhH,GAAQ,OAAIsJ,EAAyBtJ,IACvDA,SAAU6C,EACVvC,KAAMuB,EAAkBgB,aACxBkE,cAAe5D,EACf8D,sBAAuBuC,EACvB5F,WAAYsG,OAAOR,GACnBvC,kBAAmBA,IAErB,kBAAC,EAAD,CACEZ,KAAMA,EACNW,QAAS2C,EACT7C,iBAAkB,SAAAhH,GAAQ,OAAIuJ,EAAuBvJ,IACrDA,SAAU8C,EACVxC,KAAMuB,EAAkBiB,WACxBiE,cAAe5D,EACf8D,sBAAuBuC,EACvB5F,WAAYsG,OAAOP,GACnBxC,kBAAmBA,EACnBC,cAAeA,KAGnB,kBAAC,EAAD,CACEiB,SAAUyB,EACV3F,UAAWC,KAAE+F,UACb5B,QAASkB,EACTnB,MAAOT,GAAUkC,eAAeK,aAE/BvC,GAAUkC,eAAeM,cC/DrBC,GAAuB,SAClCC,EAIAC,EACAC,EACAlE,GACI,IAAD,EACqBmE,mBAASD,GAD9B,mBACI1H,EADJ,KACU4H,EADV,OAE8BD,mBAAS,IAFvC,mBAEIE,EAFJ,KAEkBC,EAFlB,OAG2BH,oBAAS,GAHpC,mBAGII,EAHJ,KAGaC,EAHb,OAIiCL,oBAAS,GAJ1C,mBAIIM,EAJJ,KAIgBC,EAJhB,OAK2CP,mBAAS,IALpD,mBAKIQ,EALJ,KAKqBC,EALrB,KAOH5F,qBAAU,WACR,GAAK2F,EAAL,CAGA,IAAME,EAAaF,IAAoBrJ,EAAkBgB,aAAe,EAAI0D,EAAOA,EAC7E8E,EAAgBH,IAAoBrJ,EAAkBgB,aAAeE,EAAKF,aAAeE,EAAKD,WAEpG,GAAKuI,GAAkBD,EAAvB,CAGA,IAAME,ECzC4B,SAAC/E,EAAc8E,GACnD,OAAO7E,KAAKC,MAAMF,EAAO8E,EAAgB,KAAO,IDwCdE,CAAuBH,EAAYC,GAE7DxH,EACJqH,IAAoBrJ,EAAkBgB,aAClChB,EAAkBiB,WAClBjB,EAAkBgB,aAExB8H,GAAQ,SAAAlJ,GACN,OAAO,eAAIA,EAAX,eAAmBoC,EAAiByH,WAErC,CAACJ,EAAiB3E,EAAMxD,EAAKF,aAAcE,EAAKD,aAEnD,IAAM0I,EAAmBzH,uBAAY,WAA2B,IAAD,EACxByG,IAA9BiB,EADsD,EACtDA,QADsD,IAC7Cb,oBAD6C,MAC9B,GAD8B,EAE7D,IAAKa,EAEH,OADAZ,EAASD,GACFA,IAER,CAACJ,IAEE1G,EAAeC,uBAAY,SAAC2H,EAAoB7H,GACpDsH,EAAmBtH,GACnB8G,GAAQ,SAAAlJ,GACN,OAAO,eAAIA,EAAX,eAAmBoC,EAAO6H,SAE3B,IAEGjC,EAAiB1F,uBACrB,SAAC4H,GACC,IAAMf,EAAeY,IAEhBZ,GAKHK,GAAc,GACdV,EAAgBtC,MAAM0D,EAAGf,GACzBG,GAAW,KANXE,GAAc,GACdV,EAAgBO,QAAQa,GACxBZ,GAAW,MAOf,CAACS,EAAkBjB,IAGrB,OAAOqB,mBACL,iBAAO,CACL9H,eACA2F,iBACAkB,UACA5H,OACA6H,eACAI,aACAF,UACAI,qBAEF,CAACpH,EAAc2F,EAAgBmB,EAAcE,EAAS/H,EAAMmI,EAAiBF,KEjF3EP,GAA8C,CAClD5H,aAAc,KACdC,WAAY,MAGD+I,GAA2C,WACtD,IAAM5L,EAAW6L,cACXC,EAAWzG,iBAA2B,IAFgB,EAGpBoF,mBAAmBvH,EAAW,IAHV,mBAGrDN,EAHqD,KAGvCmJ,EAHuC,OAIxBtB,mBAAmBvH,EAAW,IAJN,mBAIrDL,EAJqD,KAIzCmJ,EAJyC,KAKtD9L,EAAQ+L,aAAY,SAACzK,GAAD,OAAwBA,EAAMtB,QAAOgM,KACzD1J,EAAcyJ,aAAY,SAACzK,GAAD,OAAwBA,EAAMgB,cAAa0J,KACrEC,EAAkBjM,EAAM2C,GAexBuJ,EAAmBD,GAAmBA,EAAgBzK,QAAUyK,EAAgBjM,MAAM0C,GAE5FwE,QAAQC,IAAI,mBAAoB+E,GAxB4B,MAyBf/B,GAC3C,CAACQ,QAbyB,SAACa,GnBhBC,IAACtL,EmBiB7BJ,GnBjB6BI,EmBiBH,CAACwC,eAAcC,aAAYC,QnBhBhD,CACLzC,KAAMR,EAAmB8C,eACzBvC,amBeAJ,EAAS6B,EAAgB,CAAC,CAAC8F,KAAM,oBAAqB0E,QAAS,eAWhCrE,MARP,SAAC0D,EAA6Cf,GACtE3K,EAAS6B,EAAgB,CAAC,CAAC8F,KAAMgD,EAAc0B,QAAS,eAVjC,WACvB,OC1BwB,SAAC,GAQqB,IAPhDzJ,EAO+C,EAP/CA,aACA6G,EAM+C,EAN/CA,UACAjH,EAK+C,EAL/CA,YAMA,OAAKiH,EAGDA,EAAYjH,EAAYI,GACnB,CAAC4I,SAAS,EAAOb,aAfP,gDAkBZ,CAACa,SAAS,GANR,CAACA,SAAS,EAAOb,aAXN,0BD2BX2B,CAAa,CAAC1J,eAAc6G,UAAW3G,EAAKF,aAAcJ,kBAkBjEgI,GACA4B,GAJKtJ,EAzBqD,EAyBrDA,KAAMe,EAzB+C,EAyB/CA,aAAc2F,EAzBiC,EAyBjCA,eAO3BlE,qBAAU,WACR,IAAMiH,EAAQT,EAASvG,QAYvB,OAXgC,SAA1BiH,IACAD,EAAME,SACRC,aAAaH,EAAME,SAGrBzM,EAASF,EAAuB+C,IAChC0J,EAAME,QAAWE,YAAW,WAC1BH,MXzD0B,KW4D9BA,GACO,kBAAME,aAAaH,EAAME,YAC/B,CAAC5J,EAAY7C,IAEhB,IAAM4M,EAAuB,SAACC,EAA2BC,GAGvD,OElEgC,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,aAAcC,EAAqC,EAArCA,UAElD,OADkB9J,EAAW0D,OAASmG,GAAgBA,EAAeC,GAAa,EAAI,IACnE9J,EAAW0D,OFgErBqG,CAAqB,CAACF,aAFR7J,EAAWsE,QAAQqF,GAEGG,UADzB9J,EAAWsE,QAAQsF,MAoBvC,OACE,kBAAC,GAAD,CACEjK,WAAYA,EACZD,aAAcA,EACd6G,UAAW3G,EAAKF,aAChB8G,QAAS5G,EAAKD,WACd8G,YAAanH,EAAYI,GACzBgH,UAAWpH,EAAYK,GACvB0G,0BAA2B1F,EAC3ByF,uBAjB2B,SAACvJ,GAE9B,GADAiM,EAAcjM,GACVA,IAAa6C,EAAc,CAC7B,IAAMkD,EAAQ8G,EAAqBhK,EAAc7C,GACjDgM,EAAgB7I,EAAW4C,MAc3BuD,yBA1B6B,SAACtJ,GAEhC,GADAgM,EAAgBhM,GACZA,IAAa8C,EAAY,CAC3B,IAAMiD,EAAQ8G,EAAqB/J,EAAY9C,GAC/CiM,EAAc9I,EAAW4C,MAuBzBqB,cAAe+F,QAAQf,IAAoBA,EAAgBhM,QAC3DmG,KAAM8F,EACN5C,eAAgBA,EAChBK,0BAA2B/G,EAAKF,eAAiBE,EAAKD,aAAeuJ,KGlG9De,GAAY,WAAa,IAAD,EACMC,wBAAlCC,EAD4B,EAC5BA,gBAAiBC,EADW,EACXA,cAClBvK,EAAgBkJ,aAAY,SAACzK,GAAD,OAAwBA,EAAMuB,gBAAemJ,KAEzElM,EAAW6L,cAYjB,OAVAvG,qBAAU,WACR,GAAIvC,EAAc6D,OAAS,EAAG,CAAC,IAAD,uBAC5B,YAA8B7D,EAA9B,+CAA6C,CAAC,IAAD,UAAjC4E,EAAiC,EAAjCA,KAAM0E,EAA2B,EAA3BA,QAChBgB,EAAgB1F,EAAM,CAAC0E,aAFG,kFAK5BrM,EnBEG,CACLK,KAAMsB,EAAuBK,oBAC7B5B,QAAS,QmBFR,CAAC2C,EAAe/C,EAAUsN,EAAeD,IAErC,M,kCChBTE,IAASC,OAAO,mBCEa,WAC3B,OACE,kBAAC,IAAD,CAAUnL,MAAOA,GACf,kBAAC,mBAAD,CAAkBoL,SAAU,GAC1B,kBAAC,GAAD,MACA,yBAAKvJ,UAAWC,KAAEuJ,WAChB,yBAAKxJ,UAAWC,KAAEwJ,gBAChB,kBAAC,GAAD,YDTI,MAASC,SAASC,eAAe,U,mBELjDC,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,uBAAuB,iBAAiB,+BAA+B,OAAS,uBAAuB,iBAAiB,iC,2LCAnLD,EAAOC,QAAU,CAAC,KAAO,mCAAmC,QAAU,sCAAsC,UAAY,0C,yJCAxHD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,eAAiB,8B,kBCAtED,EAAOC,QAAU,CAAC,kBAAoB,0CAA0C,gBAAkB,wCAAwC,IAAM,4BAA4B,SAAW,iCAAiC,MAAQ,8BAA8B,KAAO,6BAA6B,UAAY,kCAAkC,MAAQ,gC,mHCAxVD,EAAOC,QAAU,CAAC,MAAQ,qC,mBCA1BD,EAAOC,QAAU,CAAC,MAAQ,wB","file":"static/js/main.730ab46c.chunk.js","sourcesContent":["import {Currency, GlobalState} from '../types/types';\nimport {Dispatch} from 'redux';\nimport {getRates, Rate} from '../services/rates';\n\nexport enum ActionType {\n  RATES_REQUEST = 'RATES_REQUEST',\n  RATES_RESPONSE_SUCCESS = 'RATES_RESPONSE_SUCCESS',\n  RATES_RESPONSE_ERROR = 'RATES_RESPONSE_ERROR',\n}\n\ninterface RatesRequestAction {\n  payload: {\n    currency: Currency;\n  };\n  type: ActionType.RATES_REQUEST;\n}\n\ninterface RatesResponseErrorAction {\n  payload: {\n    currency: Currency;\n  };\n  type: ActionType.RATES_RESPONSE_ERROR;\n}\n\ninterface RatesResponseSuccessAction {\n  payload: {\n    currency: Currency;\n    rates: Rate;\n  };\n  type: ActionType.RATES_RESPONSE_SUCCESS;\n}\n\nconst ratesRequest = (currency: Currency) => ({\n  payload: {currency},\n  type: ActionType.RATES_REQUEST,\n});\n\nconst ratesResponseSuccess = (currency: Currency, rates: Rate) => ({\n  payload: {currency, rates},\n  type: ActionType.RATES_RESPONSE_SUCCESS,\n});\n\nconst ratesResponseError = (currency: Currency) => ({\n  payload: {currency},\n  type: ActionType.RATES_RESPONSE_ERROR,\n});\n\nexport const updateRatesForCurrency = (currency: Currency) => (dispatch: Dispatch, getState: () => GlobalState) => {\n  const state = getState();\n  const rates = state.rates[currency];\n  if (rates && rates.loading) {\n    return;\n  }\n  dispatch(ratesRequest(currency));\n  return getRates(currency)\n    .then(({rates}) => {\n      dispatch(ratesResponseSuccess(currency, rates));\n    })\n    .catch(() => dispatch(ratesResponseError(currency)));\n};\nexport type RateAction = RatesRequestAction | RatesResponseErrorAction | RatesResponseSuccessAction;\n","import {Currency, FormCurrencyState} from '../types/types';\n\nexport enum ExchangeActionType {\n  EXCHANGE_MONEY = 'EXCHANGE_MONEY',\n}\ninterface ExchangeMoneyPayload {\n  currencyFrom: Currency;\n  currencyTo: Currency;\n  form: FormCurrencyState;\n}\ninterface ExchangeMoneyAction {\n  payload: ExchangeMoneyPayload;\n  type: ExchangeActionType.EXCHANGE_MONEY;\n}\n\nexport type ActionType = ExchangeMoneyAction;\n\nexport const exchangeCurrency = (payload: ExchangeMoneyPayload): ExchangeMoneyAction => {\n  return {\n    type: ExchangeActionType.EXCHANGE_MONEY,\n    payload,\n  };\n};\n","import axios from 'axios';\nimport {Currency} from '../types/types';\n\nexport type Rate = {\n  [key in Currency]?: number;\n};\n\nexport interface ApiRatesResponse {\n  base: Currency;\n  date: string;\n  rates: Rate;\n}\n\nexport const ratesApiUrl = 'https://api.exchangeratesapi.io/latest';\n\n// see https://exchangeratesapi.io\nexport const getRates = (currency: Currency): Promise<ApiRatesResponse> => {\n  return axios.get(ratesApiUrl, {params: {base: currency}}).then(response => {\n    if (response.status !== 200) {\n      throw new Error('Error request exchangerates api');\n    }\n    return response.data;\n  });\n};\n","import {ActionType, RateAction} from '../../actions/updateRates';\nimport {RatesState} from '../../types/types';\n\nexport const ratesReducer = (state: RatesState = {}, action: RateAction): RatesState => {\n  switch (action.type) {\n    case ActionType.RATES_REQUEST: {\n      const {currency} = action.payload;\n\n      return {\n        ...state,\n        [currency]: {\n          ...state[currency],\n          loading: true,\n        },\n      };\n    }\n\n    case ActionType.RATES_RESPONSE_SUCCESS: {\n      const {currency, rates} = action.payload;\n      return {\n        ...state,\n        [currency]: {\n          ...state[currency],\n          rates,\n          loaded: true,\n          loading: false,\n        },\n      };\n    }\n\n    case ActionType.RATES_RESPONSE_ERROR: {\n      const {currency} = action.payload;\n      return {\n        ...state,\n        [currency]: {\n          ...state[currency],\n          loading: false,\n        },\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import {NotificationPayload} from '../types/types';\n\nexport enum NotificationActionType {\n  ADD_NOTIFICATION = 'ADD_NOTIFICATION',\n  RESET_NOTIFICATIONS = 'RESET_NOTIFICATIONS',\n}\n\nexport interface NotificationAction {\n  payload: Array<NotificationPayload> | [];\n  type: NotificationActionType;\n}\n\nexport const addNotification = (payload: Array<NotificationPayload>): NotificationAction => {\n  return {\n    type: NotificationActionType.ADD_NOTIFICATION,\n    payload,\n  };\n};\n\nexport const resetNotifications = (): NotificationAction => {\n  return {\n    type: NotificationActionType.RESET_NOTIFICATIONS,\n    payload: [],\n  };\n};\n","import {VariantType} from 'notistack';\n\nexport type Currency = 'RUB' | 'USD' | 'EUR' | 'GBP';\nexport type SymbolCurrency = '$' | '€' | '£' | '₽';\n\nexport type FieldInputCallback = (floatValue: number, fieldName: string) => void;\n\nexport enum CurrencyBlockType {\n  currencyFrom = 'currencyFrom',\n  currencyTo = 'currencyTo',\n}\nexport type Rate = {\n  [key in Currency]: number;\n};\n\nexport type RatesState = {\n  [key in Currency]?: {\n    loading: boolean;\n    loaded?: boolean;\n    rates: Rate;\n  };\n};\n\nexport type NotificationState = Array<NotificationPayload> | [];\nexport interface NotificationPayload {\n  text: string;\n  variant: VariantType;\n}\n\nexport type CurrentBalanceConfig = {\n  [key in string]: number;\n};\n\nexport interface GlobalState {\n  rates: RatesState;\n  userBalance: CurrentBalanceConfig;\n  notifications: Array<NotificationPayload> | [];\n}\n\nexport type InputValueState = number | null;\n\nexport interface FormCurrencyState {\n  currencyFrom: number | null;\n  currencyTo: number | null;\n}\n\nexport interface FormInitialCurrencyState {\n  currencyFrom: number | null;\n  currencyTo: number | null;\n}\n","import {NotificationAction, NotificationActionType} from '../../actions/notification';\nimport {NotificationState} from '../../types/types';\n\nexport const notificationsReducer = (state: NotificationState = [], action: NotificationAction): NotificationState => {\n  switch (action.type) {\n    case NotificationActionType.ADD_NOTIFICATION: {\n      return [...state, ...action.payload];\n    }\n\n    case NotificationActionType.RESET_NOTIFICATIONS: {\n      return [];\n    }\n\n    default:\n      return state;\n  }\n};\n","import {combineReducers, createStore as reduxCreateStore, Middleware, Store, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport {ratesReducer} from './reducers/rates-reducer';\nimport config from './config.json';\nimport {GlobalState} from '../types/types';\nimport {createExchangeReducer} from './reducers/exchange-reducer';\nimport {notificationsReducer} from './reducers/notifications-reducer';\n\nconst composeEnhancers = composeWithDevTools({});\nconst middlewares: Middleware[] = [thunk];\n\nif (process.env.NODE_ENV === 'development') {\n  const createReduxLogger = require('redux-logger');\n  middlewares.push(createReduxLogger.createLogger());\n}\n\nconst createStore = (): Store<GlobalState> => {\n  return reduxCreateStore<GlobalState, any, any, any>(\n    combineReducers<GlobalState>({\n      userBalance: createExchangeReducer(config),\n      rates: ratesReducer,\n      notifications: notificationsReducer,\n    }),\n    composeEnhancers(applyMiddleware(...middlewares)),\n  );\n};\n\nexport const store = createStore();\n","import {ActionType, ExchangeActionType} from '../../actions/exchangeCurrency';\nimport {CurrentBalanceConfig} from '../../types/types';\n\nexport const createExchangeReducer = (initialState: CurrentBalanceConfig): any => {\n  return function exchangeReducer(\n    state: CurrentBalanceConfig = initialState,\n    action: ActionType,\n  ): CurrentBalanceConfig {\n    switch (action.type) {\n      case ExchangeActionType.EXCHANGE_MONEY: {\n        const {\n          payload: {currencyFrom, currencyTo, form},\n        } = action;\n        if (!form.currencyFrom || !form.currencyTo) {\n          return state;\n        }\n        return {\n          ...state,\n          [currencyFrom]: state[currencyFrom] - form.currencyFrom,\n          [currencyTo]: state[currencyTo] + form.currencyTo,\n        };\n      }\n\n      default:\n        return state;\n    }\n  };\n};\n","import {Currency, SymbolCurrency} from '../types/types';\n\nexport const CURRENCIES: Array<Currency> = ['RUB', 'USD', 'EUR', 'GBP'];\n\nexport const UPDATE_RATES_DELAY = 10000;\n\nexport const CURRENCY_SYMBOL_MAP: {[key in Currency]: SymbolCurrency} = {\n  RUB: '₽',\n  USD: '$',\n  EUR: '€',\n  GBP: '£',\n};\nexport const CHAR_NO_BREAK_SPACE = '\\u00A0';\n","import React, {useCallback} from 'react';\nimport NumberFormat from 'react-number-format';\nimport {CurrencyBlockType, FieldInputCallback} from '../../types/types';\n\nimport s from './number-format-input.module.css';\n\ntype Props = {\n  name: CurrencyBlockType;\n  inputValue?: string;\n  prefix: string;\n  onChange: FieldInputCallback;\n};\nexport const NumberFormatInput: React.FC<Props> = ({\n  onChange,\n  prefix,\n  inputValue = '',\n  name,\n}: Props): React.ReactElement => {\n  const handleChange = useCallback(\n    ({value}: {value: string}): void => {\n      const normalizedValue = prefix === '-' ? value.slice(1) : value;\n      const propsValue = inputValue ? +inputValue : 0;\n\n      if (+normalizedValue !== propsValue) {\n        onChange(+normalizedValue, name);\n      }\n    },\n    [onChange, name, prefix, inputValue],\n  );\n\n  return (\n    <NumberFormat\n      className={s.input}\n      allowNegative={false}\n      decimalScale={2}\n      maxLength={12}\n      name={name}\n      prefix={prefix}\n      value={inputValue}\n      thousandSeparator={' '}\n      autoComplete={'off'}\n      onValueChange={handleChange}\n    />\n  );\n};\n","import React, {ReactNode, useRef, useEffect} from 'react';\nimport SlickSlider, {Settings} from 'react-slick';\n\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport './slick.css';\nimport s from './slider.module.css';\n\ntype Props = {\n  children: ReactNode[];\n  className?: string;\n  currentSlide: number;\n  onSlideChange: (index: number) => void;\n};\n\nconst defaultSettings: Settings = {\n  dots: true,\n  arrows: true,\n  infinite: false,\n  speed: 260,\n};\n\nexport const Slider: React.FC<Props> = ({currentSlide, children, onSlideChange}: Props) => {\n  const sliderRef = useRef<SlickSlider>(null);\n  useEffect(() => {\n    sliderRef.current && sliderRef.current.slickGoTo(currentSlide);\n  }, [currentSlide]);\n\n  return (\n    <SlickSlider {...defaultSettings} ref={sliderRef} initialSlide={currentSlide} afterChange={onSlideChange}>\n      {children.map(\n        (slide: ReactNode, index: number): React.ReactElement => {\n          return (\n            <div className={s.slide} key={index}>\n              {slide}\n            </div>\n          );\n        },\n      )}\n    </SlickSlider>\n  );\n};\n","export const resourcesTemplate = (str: string, vars: {[key in string]: string}) => {\n  return str.replace(/%.+?%/g, match => {\n    const key = match.replace(/\\W/g, '');\n    return vars[key];\n  });\n};\n","export const formattedValue = (rate: number): number => {\n  return Math.round(rate * 100) / 100;\n};\n","import {Currency} from '../types/types';\nimport {CHAR_NO_BREAK_SPACE, CURRENCY_SYMBOL_MAP} from '../constants/currency';\n\nexport const parseMoney = (currency: Currency, value: number): string => {\n  const str = value.toString();\n  const innerValue = str.length <= 4 ? str : str.replace(/\\B(?=(\\d{3})+(?!\\d))/g, CHAR_NO_BREAK_SPACE);\n  return `${currency ? `${CURRENCY_SYMBOL_MAP[currency]}` : ''}${innerValue}`;\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport {Currency, CurrencyBlockType, FieldInputCallback} from '../../types/types';\nimport {NumberFormatInput} from '../number-format-input/number-format-input';\nimport {Slider} from '../slider/slider';\nimport {resourcesTemplate} from '../../utils/resourcesTemplate';\nimport {formattedValue} from '../../utils/formatters';\nimport {parseMoney} from '../../utils/parseMoney';\nimport resources from './config.json';\n\nimport s from './exchange-block.module.css';\n\ninterface Props {\n  currency: Currency;\n  rate?: number;\n  inputValue: string;\n  type: CurrencyBlockType;\n  onCurrencyChange: (currency: Currency) => void;\n  onCurrencyValueChange: FieldInputCallback;\n  currencyItems: Array<Currency>;\n  balance: number;\n  currencyAmountStr: string;\n  isRateLoading?: boolean;\n}\n\nexport const ExchangeBlock: React.FC<Props> = ({\n  currencyItems,\n  rate,\n  currency,\n  onCurrencyChange,\n  onCurrencyValueChange,\n  type,\n  inputValue,\n  balance,\n  currencyAmountStr,\n  isRateLoading= false\n}) => {\n  const handleSlide = (index: number): void => {\n    onCurrencyChange(currencyItems[index]);\n  };\n  console.log('rate', rate)\n  return (\n    <div className={cn(s.root, s[`root_${type}`])}>\n      <Slider onSlideChange={handleSlide} currentSlide={currencyItems.indexOf(currency)}>\n        {currencyItems.map((currency, index) => (\n          <div key={currency} className={s.block}>\n            <div className={s.row}>\n              <p>{currency}</p>\n              <NumberFormatInput\n                prefix={type === CurrencyBlockType.currencyFrom ? '-' : '+'}\n                name={type}\n                inputValue={inputValue}\n                onChange={onCurrencyValueChange}\n              />\n            </div>\n\n            <div className={s.row}>\n              <p className={s.text}>\n                {' '}\n                {resourcesTemplate(resources.ExchangeBlock.balanceText, {\n                  balance: parseMoney(currency, formattedValue(balance)),\n                })}\n              </p>\n            </div>\n            {rate && type === CurrencyBlockType.currencyTo && (\n              <div className={cn(s.row, s.row_rate)}>\n                <p className={cn(s.text, s.text_rate)}>{currencyAmountStr}</p>\n              </div>\n            )}\n\n            {!rate && type === CurrencyBlockType.currencyTo && !isRateLoading && (\n              <div className={cn(s.row, s.row_rate)}>\n                <span className={s.error}>{resources.ExchangeBlock.getRateError}</span>\n              </div>\n            )}\n          </div>\n        ))}\n      </Slider>\n    </div>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport s from './button.module.css';\n\ntype Props = {\n  title?: string;\n  disabled?: boolean;\n  className?: string;\n  children: any;\n  onClick: (e: React.SyntheticEvent<HTMLElement> | null) => void;\n  hasLoader?: boolean;\n  type?: string;\n};\n\nexport const Button: React.FC<Props> = ({\n  type = 'button',\n  hasLoader = false,\n  disabled = false,\n  className,\n  title,\n  onClick,\n  children,\n}: Props): React.ReactElement => (\n  <button className={cn(s.button, className)} disabled={disabled} onClick={onClick} title={title} aria-label={title}>\n    {hasLoader ? (\n      <svg width={15} height={15} version=\"1.1\" x=\"0\" y=\"0\" className={s.loader} viewBox=\"0 0 100 100\">\n        <circle className={s.circle} cx=\"50\" cy=\"50\" r=\"44\" />\n      </svg>\n    ) : (\n      children\n    )}\n  </button>\n);\n","import React from 'react';\nimport {Currency, CurrencyBlockType, FieldInputCallback, InputValueState} from '../../types/types';\nimport {ExchangeBlock} from '../exchange-block/exchange-block';\nimport {CURRENCIES, CURRENCY_SYMBOL_MAP} from '../../constants/currency';\nimport {Button} from '../button/button';\nimport resources from './config.json';\n\nimport s from './exchange-widget-view.module.css';\nimport {resourcesTemplate} from '../../utils/resourcesTemplate';\nimport {formattedValue} from '../../utils/formatters';\n\ninterface Props {\n  currencyFrom: Currency;\n  currencyTo: Currency;\n  balanceFrom: number;\n  balanceTo: number;\n  handleCurrencyFromChange: (currency: Currency) => void;\n  handleCurrencyToChange: (currency: Currency) => void;\n  handleCurrencyValueChange: FieldInputCallback;\n  handleExchange: (e: React.SyntheticEvent<HTMLElement> | null) => void;\n  rate: number;\n  isRateLoading: boolean;\n  valueFrom?: InputValueState;\n  valueTo?: InputValueState;\n  isExchangeButtonDisabled: boolean;\n}\n\nexport const ExchangeWidgetView: React.FC<Props> = ({\n  currencyTo,\n  currencyFrom,\n  handleCurrencyFromChange,\n  handleCurrencyToChange,\n  handleCurrencyValueChange,\n  handleExchange,\n  rate,\n  valueFrom,\n  valueTo,\n  isRateLoading,\n  balanceFrom,\n  balanceTo,\n  isExchangeButtonDisabled,\n}) => {\n  const currencyAmountStr = resourcesTemplate(resources.ExchangeWidget.currencyRateText, {\n    currencyTo: `${CURRENCY_SYMBOL_MAP[currencyTo]}`,\n    currencyFrom: `${CURRENCY_SYMBOL_MAP[currencyFrom]}${formattedValue(rate)}`,\n  });\n\n  return (\n    <section className={s.root}>\n      <div className={s.content}>\n        <ExchangeBlock\n          balance={balanceFrom}\n          onCurrencyChange={currency => handleCurrencyFromChange(currency)}\n          currency={currencyFrom}\n          type={CurrencyBlockType.currencyFrom}\n          currencyItems={CURRENCIES}\n          onCurrencyValueChange={handleCurrencyValueChange}\n          inputValue={String(valueFrom)}\n          currencyAmountStr={currencyAmountStr}\n        />\n        <ExchangeBlock\n          rate={rate}\n          balance={balanceTo}\n          onCurrencyChange={currency => handleCurrencyToChange(currency)}\n          currency={currencyTo}\n          type={CurrencyBlockType.currencyTo}\n          currencyItems={CURRENCIES}\n          onCurrencyValueChange={handleCurrencyValueChange}\n          inputValue={String(valueTo)}\n          currencyAmountStr={currencyAmountStr}\n          isRateLoading={isRateLoading}\n        />\n      </div>\n      <Button\n        disabled={isExchangeButtonDisabled}\n        className={s.submitBtn}\n        onClick={handleExchange}\n        title={resources.ExchangeWidget.buttonTitle}\n      >\n        {resources.ExchangeWidget.buttonText}\n      </Button>\n    </section>\n  );\n};\n","import React, {useCallback, useEffect, useMemo, useState} from 'react';\nimport {CurrencyBlockType, FormInitialCurrencyState} from '../types/types';\nimport {normalizeCurrencyValue} from '../utils/normalizers';\n\nexport interface SubmitSuccessCallback {\n  (e: React.SyntheticEvent<HTMLElement, Event> | null): void;\n}\n\nexport interface SubmitErrorCallback {\n  (e: React.SyntheticEvent<HTMLElement, Event> | null, errorMessage: string): void;\n}\n\nexport interface ValidateCallback {\n  (): {isValid: boolean; errorMessage?: string};\n}\n\nexport const useCurrencyFormState = (\n  submitCallbacks: {\n    success: SubmitSuccessCallback;\n    error: SubmitErrorCallback;\n  },\n  validateOnSubmitCallback: ValidateCallback,\n  initialFormValues: FormInitialCurrencyState,\n  rate: number,\n) => {\n  const [form, setForm] = useState(initialFormValues);\n  const [errorMessage, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [updateFieldName, setUpdateFieldName] = useState('');\n\n  useEffect(() => {\n    if (!updateFieldName) {\n      return;\n    }\n    const resultRate = updateFieldName === CurrencyBlockType.currencyFrom ? 1 / rate : rate;\n    const currencyValue = updateFieldName === CurrencyBlockType.currencyFrom ? form.currencyFrom : form.currencyTo;\n\n    if (!currencyValue || !resultRate) {\n      return;\n    }\n    const normalizedCurrencyValue = normalizeCurrencyValue(resultRate, currencyValue);\n\n    const name =\n      updateFieldName === CurrencyBlockType.currencyFrom\n        ? CurrencyBlockType.currencyTo\n        : CurrencyBlockType.currencyFrom;\n\n    setForm(state => {\n      return {...state, [name as string]: normalizedCurrencyValue};\n    });\n  }, [updateFieldName, rate, form.currencyFrom, form.currencyTo]);\n\n  const validateOnSubmit = useCallback((): string | undefined => {\n    const {isValid, errorMessage = ''} = validateOnSubmitCallback();\n    if (!isValid) {\n      setError(errorMessage);\n      return errorMessage;\n    }\n  }, [validateOnSubmitCallback]);\n\n  const handleChange = useCallback((floatValue: number, name: string) => {\n    setUpdateFieldName(name);\n    setForm(state => {\n      return {...state, [name]: floatValue};\n    });\n  }, []);\n\n  const handleExchange = useCallback(\n    (e: React.SyntheticEvent<HTMLElement, Event> | null) => {\n      const errorMessage = validateOnSubmit();\n\n      if (!errorMessage) {\n        setSubmitting(false);\n        submitCallbacks.success(e);\n        setSuccess(true);\n      } else {\n        setSubmitting(false);\n        submitCallbacks.error(e, errorMessage);\n        setSuccess(false);\n      }\n    },\n    [validateOnSubmit, submitCallbacks],\n  );\n\n  return useMemo(\n    () => ({\n      handleChange,\n      handleExchange,\n      setForm,\n      form,\n      errorMessage,\n      submitting,\n      success,\n      updateFieldName,\n    }),\n    [handleChange, handleExchange, errorMessage, success, form, updateFieldName, submitting],\n  );\n};\n","export const normalizeCurrencyValue = (rate: number, currencyValue: number): number => {\n  return Math.round(rate * currencyValue * 100) / 100;\n};\n","import React, {useEffect, useRef, useState} from 'react';\nimport {useSelector, shallowEqual} from 'react-redux';\nimport {Currency, FormInitialCurrencyState, GlobalState} from '../../types/types';\nimport {useDispatch} from 'react-redux';\nimport {updateRatesForCurrency} from '../../actions/updateRates';\nimport {CURRENCIES, UPDATE_RATES_DELAY} from '../../constants/currency';\nimport {ExchangeWidgetView} from './exchange-widget-view';\nimport {exchangeCurrency} from '../../actions/exchangeCurrency';\nimport {addNotification} from '../../actions/notification';\nimport {checkBalance} from '../../utils/validators';\nimport {useCurrencyFormState} from '../../hooks/useCurrencyFormState';\nimport {getCurrencyNextIndex} from '../../utils/getCurrencyNextIndex';\n\ninterface Props {}\n\nconst initialFormValues: FormInitialCurrencyState = {\n  currencyFrom: null,\n  currencyTo: null,\n};\n\nexport const ExchangeWidgetContainer: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const timerRef = useRef<{timerId?: number}>({});\n  const [currencyFrom, setCurrencyFrom] = useState<Currency>(CURRENCIES[0]);\n  const [currencyTo, setCurrencyTo] = useState<Currency>(CURRENCIES[2]);\n  const rates = useSelector((state: GlobalState) => state.rates, shallowEqual);\n  const userBalance = useSelector((state: GlobalState) => state.userBalance, shallowEqual);\n  const currencyToRates = rates[currencyTo];\n\n  const validateOnSubmit = () => {\n    return checkBalance({currencyFrom, valueFrom: form.currencyFrom, userBalance});\n  };\n\n  const handleSuccessSubmit = (e: React.SyntheticEvent<HTMLElement> | null) => {\n    dispatch(exchangeCurrency({currencyFrom, currencyTo, form}));\n    dispatch(addNotification([{text: 'Exchange success!', variant: 'success'}]));\n  };\n\n  const handleErrorSubmit = (e: React.SyntheticEvent<HTMLElement> | null, errorMessage: string) => {\n    dispatch(addNotification([{text: errorMessage, variant: 'error'}]));\n  };\n\n  const currencyFromRate = currencyToRates && currencyToRates.loaded && currencyToRates.rates[currencyFrom];\n\n  console.log('currencyFromRate', currencyFromRate)\n  const {form, handleChange, handleExchange} = useCurrencyFormState(\n    {success: handleSuccessSubmit, error: handleErrorSubmit},\n    validateOnSubmit,\n    initialFormValues,\n    currencyFromRate,\n  );\n\n  useEffect(() => {\n    const timer = timerRef.current;\n    const updateRatesWithInterval = () => {\n      if (timer.timerId) {\n        clearTimeout(timer.timerId);\n      }\n\n      dispatch(updateRatesForCurrency(currencyTo));\n      timer.timerId = (setTimeout(() => {\n        updateRatesWithInterval();\n      }, UPDATE_RATES_DELAY) as unknown) as number;\n    };\n    updateRatesWithInterval();\n    return () => clearTimeout(timer.timerId);\n  }, [currencyTo, dispatch]);\n\n  const setCurrencyNextIndex = (currentCurrency: Currency, prevCurrency: Currency): number => {\n    const currentIndex = CURRENCIES.indexOf(currentCurrency);\n    const prevIndex = CURRENCIES.indexOf(prevCurrency);\n    return getCurrencyNextIndex({currentIndex, prevIndex});\n  };\n\n  const handleCurrencyFromChange = (currency: Currency): void => {\n    setCurrencyFrom(currency);\n    if (currency === currencyTo) {\n      const index = setCurrencyNextIndex(currencyTo, currency);\n      setCurrencyTo(CURRENCIES[index]);\n    }\n  };\n\n  const handleCurrencyToChange = (currency: Currency): void => {\n    setCurrencyTo(currency);\n    if (currency === currencyFrom) {\n      const index = setCurrencyNextIndex(currencyFrom, currency);\n      setCurrencyFrom(CURRENCIES[index]);\n    }\n  };\n\n  return (\n    <ExchangeWidgetView\n      currencyTo={currencyTo}\n      currencyFrom={currencyFrom}\n      valueFrom={form.currencyFrom}\n      valueTo={form.currencyTo}\n      balanceFrom={userBalance[currencyFrom]}\n      balanceTo={userBalance[currencyTo]}\n      handleCurrencyValueChange={handleChange}\n      handleCurrencyToChange={handleCurrencyToChange}\n      handleCurrencyFromChange={handleCurrencyFromChange}\n      isRateLoading={Boolean(currencyToRates) && currencyToRates.loading}\n      rate={currencyFromRate}\n      handleExchange={handleExchange}\n      isExchangeButtonDisabled={!form.currencyFrom || !form.currencyTo || !currencyFromRate}\n    />\n  );\n};\n","import {Currency, CurrentBalanceConfig} from '../types/types';\n\nconst errorMessage = 'You do not have enough money in your account';\nconst errorRequired = 'No values for exchange';\nexport const checkBalance = ({\n  currencyFrom,\n  valueFrom,\n  userBalance,\n}: {\n  currencyFrom: Currency;\n  valueFrom: number | null;\n  userBalance: CurrentBalanceConfig;\n}): {isValid: boolean; errorMessage?: string} => {\n  if (!valueFrom) {\n    return {isValid: false, errorMessage: errorRequired};\n  }\n  if (valueFrom > userBalance[currencyFrom]) {\n    return {isValid: false, errorMessage};\n  }\n\n  return {isValid: true};\n};\n","import {CURRENCIES} from '../constants/currency';\ninterface CurrencyData {\n  currentIndex: number;\n  prevIndex: number;\n}\nexport const getCurrencyNextIndex = ({currentIndex, prevIndex}: CurrencyData): number => {\n  const nextIndex = CURRENCIES.length + currentIndex + (currentIndex > prevIndex ? -1 : 1);\n  return nextIndex % CURRENCIES.length;\n};\n","import {useEffect} from 'react';\nimport {useSnackbar} from 'notistack';\nimport {useSelector, useDispatch, shallowEqual} from 'react-redux';\nimport {resetNotifications} from '../../actions/notification';\nimport {GlobalState} from '../../types/types';\n\nexport const Notistack = (): null => {\n  const {enqueueSnackbar, closeSnackbar} = useSnackbar();\n  const notifications = useSelector((state: GlobalState) => state.notifications, shallowEqual);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (notifications.length > 0) {\n      for (const {text, variant} of notifications) {\n        enqueueSnackbar(text, {variant});\n      }\n\n      dispatch(resetNotifications());\n    }\n  }, [notifications, dispatch, closeSnackbar, enqueueSnackbar]);\n\n  return null;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './ui/app/app';\n\nimport './styles/reset.css';\nimport './styles/reboot.css';\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport {store} from '../../store/store';\nimport {SnackbarProvider} from 'notistack';\nimport {ExchangeWidgetContainer} from '../exchange-widget/exchange-widget-container';\nimport {Notistack} from '../notistack/notistack';\nimport s from './app.module.css';\n\nexport const App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <SnackbarProvider maxSnack={3}>\n        <Notistack />\n        <div className={s.container}>\n          <div className={s.contentWrapper}>\n            <ExchangeWidgetContainer />\n          </div>\n        </div>\n      </SnackbarProvider>\n    </Provider>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__2CF7H\",\"loader\":\"button_loader__1FtDE\",\"spinner-rotate\":\"button_spinner-rotate__S7X1o\",\"circle\":\"button_circle__3bYBt\",\"spinner-offset\":\"button_spinner-offset__1t0Iz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"exchange-widget-view_root__2rR-E\",\"content\":\"exchange-widget-view_content__tvriG\",\"submitBtn\":\"exchange-widget-view_submitBtn__15EI2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__O5cx8\",\"contentWrapper\":\"app_contentWrapper__1h9GT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root_currencyFrom\":\"exchange-block_root_currencyFrom__kT5ap\",\"root_currencyTo\":\"exchange-block_root_currencyTo__3UXG2\",\"row\":\"exchange-block_row__17_XV\",\"row_rate\":\"exchange-block_row_rate__nyxy4\",\"block\":\"exchange-block_block__yBRUZ\",\"text\":\"exchange-block_text__2m35k\",\"text_rate\":\"exchange-block_text_rate__diRTm\",\"error\":\"exchange-block_error__1Z3ej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"number-format-input_input__2ITC6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slide\":\"slider_slide__1nptA\"};"],"sourceRoot":""}